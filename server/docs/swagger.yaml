definitions:
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.GetAllGamesResponse:
    properties:
      games:
        additionalProperties:
          $ref: '#/definitions/types.GameDefinition'
        type: object
    type: object
  api.GetAllUsersResponse:
    properties:
      users:
        additionalProperties:
          $ref: '#/definitions/types.User'
        type: object
    type: object
  api.GetGameByIDResponse:
    properties:
      game:
        $ref: '#/definitions/types.GameDefinition'
        type: object
    type: object
  api.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  api.RegisterResponse:
    properties:
      user:
        $ref: '#/definitions/types.User'
        type: object
    type: object
  api.ResponseGetUserByID:
    properties:
      user:
        $ref: '#/definitions/types.User'
        type: object
    type: object
  types.GameDefinition:
    properties:
      id:
        type: string
      libPath:
        type: string
    type: object
  types.User:
    properties:
      username:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/games:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetAllGamesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      tags:
      - Games
  /api/games/{id}:
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetGameByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      tags:
      - Games
  /api/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: .
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      tags:
      - Auth
  /api/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetAllUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      tags:
      - Users
  /api/users/{id}:
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ResponseGetUserByID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      tags:
      - Users
swagger: "2.0"
